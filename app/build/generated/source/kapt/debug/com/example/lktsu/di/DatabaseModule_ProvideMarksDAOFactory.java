// Generated by Dagger (https://dagger.dev).
package com.example.lktsu.di;

import com.example.lktsu.data.room.AppDatabase;
import com.example.lktsu.data.room.MarksDAO;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DatabaseModule_ProvideMarksDAOFactory implements Factory<MarksDAO> {
  private final DatabaseModule module;

  private final Provider<AppDatabase> databaseProvider;

  public DatabaseModule_ProvideMarksDAOFactory(DatabaseModule module,
      Provider<AppDatabase> databaseProvider) {
    this.module = module;
    this.databaseProvider = databaseProvider;
  }

  @Override
  public MarksDAO get() {
    return provideMarksDAO(module, databaseProvider.get());
  }

  public static DatabaseModule_ProvideMarksDAOFactory create(DatabaseModule module,
      Provider<AppDatabase> databaseProvider) {
    return new DatabaseModule_ProvideMarksDAOFactory(module, databaseProvider);
  }

  public static MarksDAO provideMarksDAO(DatabaseModule instance, AppDatabase database) {
    return Preconditions.checkNotNullFromProvides(instance.provideMarksDAO(database));
  }
}
