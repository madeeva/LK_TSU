// Generated by Dagger (https://dagger.dev).
package com.example.lktsu.di;

import com.example.lktsu.data.room.HistoryDAO;
import com.example.lktsu.data.room.MarksDAO;
import com.example.lktsu.data.room.NewsDAO;
import com.example.lktsu.data.room.StatementDAO;
import com.example.lktsu.data.room.StudentDAO;
import com.example.lktsu.repositories.RoomRepositoryImpl;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DatabaseModule_ProvideRoomRepositoryImplFactory implements Factory<RoomRepositoryImpl> {
  private final DatabaseModule module;

  private final Provider<StudentDAO> studentDAOProvider;

  private final Provider<NewsDAO> newsDAOProvider;

  private final Provider<StatementDAO> statementDAOProvider;

  private final Provider<MarksDAO> marksDAOProvider;

  private final Provider<HistoryDAO> historyDAOProvider;

  public DatabaseModule_ProvideRoomRepositoryImplFactory(DatabaseModule module,
      Provider<StudentDAO> studentDAOProvider, Provider<NewsDAO> newsDAOProvider,
      Provider<StatementDAO> statementDAOProvider, Provider<MarksDAO> marksDAOProvider,
      Provider<HistoryDAO> historyDAOProvider) {
    this.module = module;
    this.studentDAOProvider = studentDAOProvider;
    this.newsDAOProvider = newsDAOProvider;
    this.statementDAOProvider = statementDAOProvider;
    this.marksDAOProvider = marksDAOProvider;
    this.historyDAOProvider = historyDAOProvider;
  }

  @Override
  public RoomRepositoryImpl get() {
    return provideRoomRepositoryImpl(module, studentDAOProvider.get(), newsDAOProvider.get(), statementDAOProvider.get(), marksDAOProvider.get(), historyDAOProvider.get());
  }

  public static DatabaseModule_ProvideRoomRepositoryImplFactory create(DatabaseModule module,
      Provider<StudentDAO> studentDAOProvider, Provider<NewsDAO> newsDAOProvider,
      Provider<StatementDAO> statementDAOProvider, Provider<MarksDAO> marksDAOProvider,
      Provider<HistoryDAO> historyDAOProvider) {
    return new DatabaseModule_ProvideRoomRepositoryImplFactory(module, studentDAOProvider, newsDAOProvider, statementDAOProvider, marksDAOProvider, historyDAOProvider);
  }

  public static RoomRepositoryImpl provideRoomRepositoryImpl(DatabaseModule instance,
      StudentDAO studentDAO, NewsDAO newsDAO, StatementDAO statementDAO, MarksDAO marksDAO,
      HistoryDAO historyDAO) {
    return Preconditions.checkNotNullFromProvides(instance.provideRoomRepositoryImpl(studentDAO, newsDAO, statementDAO, marksDAO, historyDAO));
  }
}
