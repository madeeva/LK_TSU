// Generated by Dagger (https://dagger.dev).
package com.example.lktsu;

import com.example.lktsu.repositories.RoomRepositoryImpl;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class StatementsActivity_MembersInjector implements MembersInjector<StatementsActivity> {
  private final Provider<RoomRepositoryImpl> roomRepositoryImplProvider;

  public StatementsActivity_MembersInjector(
      Provider<RoomRepositoryImpl> roomRepositoryImplProvider) {
    this.roomRepositoryImplProvider = roomRepositoryImplProvider;
  }

  public static MembersInjector<StatementsActivity> create(
      Provider<RoomRepositoryImpl> roomRepositoryImplProvider) {
    return new StatementsActivity_MembersInjector(roomRepositoryImplProvider);
  }

  @Override
  public void injectMembers(StatementsActivity instance) {
    injectRoomRepositoryImpl(instance, roomRepositoryImplProvider.get());
  }

  @InjectedFieldSignature("com.example.lktsu.StatementsActivity.roomRepositoryImpl")
  public static void injectRoomRepositoryImpl(StatementsActivity instance,
      RoomRepositoryImpl roomRepositoryImpl) {
    instance.roomRepositoryImpl = roomRepositoryImpl;
  }
}
